//第一版本:简单的只是用a*a求平方根,忽略了溢出的问题
class Solution {
    public int mySqrt(int x) {
            int a=1;
        //这里改成while ((long)a*a<=x)就可以运行成功.
            while (a*a<=x){
                a++;      
        }
         return a-1;
    }
}
//第二版本:用二分法来规避溢出的问题,但出现了时间复杂度过高,力扣平台计算超过时间限制的问题
class Solution {
    public int mySqrt(int x) {
        int a=1;
        int b=x;
        int mid=0;
        int result=0;
        while (a<=b)    {
            mid=(a+b)/2;
            if (mid*mid<=x){
                result=mid;
                a=mid+1;

            }
            else
                b=mid-1;
        }
       return result;
    }
}
//第三版:优化了二分法,通过
class Solution {
    public int mySqrt(int x) {
     int a=1;
        int b=x/2;
        int mid=0;
        int result=0;
        if(x==1) return 1;
        else{
        while (a<=b)    {
            mid=(a+b)/2;
            if ((long)mid*mid<=x){//转为long
                result=mid;
                a=mid+1;

            }
            else
                b=mid-1;
        }
       return result;
    }
    }
}